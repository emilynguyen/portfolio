<main id="design-page">
  {{#each gallery}}
  {{#unless hide}}
  {{#unless dev}}
  <div class="project">
    <div class="grid">
      <div class="grid__item lap-up--one-half">
        <a href="/{{url}}">
          <img src="/images/{{icon_square}}"></a>
      </div>
      <div class="grid__item lap-up--one-half">
        <div class="mb-2 palm--mt-2">
          <a href="/{{url}}">
            <h2>{{title}}</h2>
          </a>
        </div>

        <p class="mb-1 el-st rotate rotate-{{@index}}">{{description}}</p>
        {{#if sub}}
        <p class="mb-1 translucent">{{sub}}</p>
        {{/if}}
        <h5>
          <a href="/{{url}}" class="opacity-hover">> learn more</a></h5>
      </div>
    </div>
  </div>
  {{/unless}}
  {{/unless}}
  {{/each}}
</main>

<!--
<script>

  var stringRandom = (function () {

    var data = {
      isScrolling: false,
      repeat: 0,
      target: [],
      letters: '*+-/@_$[%Â£!XO1&>',
      originalStrings: '',
      singleLetters: []
    }

    Array.prototype.shuffle = function () {
      var input = this;

      for (var i = input.length - 1; i >= 0; i--) {

        var randomIndex = Math.floor(Math.random() * (i + 1));
        var itemAtIndex = input[randomIndex];

        input[randomIndex] = input[i];
        input[i] = itemAtIndex;
      }
      return input;
    }

    function checkLength(x) {
      return Array.from(document.querySelectorAll(x)).length > 0;
    }

    function addListener(evt, fx) {
      window.addEventListener(evt, fx);
    }

    function changeLetter(letter) {
      if (letter.textContent != ' ') {
        letter.classList.add('is-changing');
        letter.style.animationDuration = Math.random().toFixed(2) + 's';

        var newChar = data.letters.substr(Math.random() * data.letters.length, 1);

        letter.textContent = newChar;
        letter.setAttribute('data-txt', newChar);
      }
    }

    function resetLetter(letter, value) {
      letter.classList.remove('is-changing');
      letter.textContent = value;
      letter.setAttribute('data-txt', value);
    }


    // divide le singole lettere delle stringhe e le wrappa in span
    function divideLetters(classname) {

      data.target.forEach((element, index) => {

        var text = element.textContent;
        var textDivided = '';

        data.originalStrings = text;

        for (var i = 0; i < text.length; i++) {
          textDivided += `<span class="el-sp ${classname}-${index}-span-${i}" data-txt="${text.substr(i, 1)}">${text.substr(i, 1)}</span>`;
        }

        element.innerHTML = textDivided;
      });
      data.singleLetters = document.querySelectorAll(`.el-sp`);
    }

    // changes letters
    function changeLetters() {
      if (data.isScrolling) {
        data.singleLetters.forEach(function (el, index) {
          changeLetter(el);
        });
      }

      setTimeout(changeLetters, 10);
    }

    // reset to initial letters
    function resetLetters() {

      var randomArray = [];
      for (var i = 0; i < data.singleLetters.length; i++) {
        randomArray.push(i);
      }

      randomArray.shuffle();

      randomArray.forEach(function (el, index) {

        setTimeout(function () {
          resetLetter(data.singleLetters[el], data.originalStrings.substring(el, el + 1));
        }, (index * 20 * (Math.random() * 5))).toFixed(2);

      });
    }

    // event listener sullo scroll
    function updateScrollState() {
      clearTimeout(delay);
      data.isScrolling = true;

      var delay = setTimeout(function () {
        data.isScrolling = false;
        resetLetters();
      }, 300);
    };

    return {
      init: function (selector) {

        // controllo che ci siano stringhe su cui agire
        if (checkLength(selector)) {

          // salvo le stringhe
          data.target = Array.from(document.querySelectorAll(selector));

          // divido le singole stringhe in lettere
          divideLetters(selector.replace(/\.$/, ""));

          // lancio la funzione che si ripete
          changeLetters();

          // aggiungo il listener allo scroll
          addListener('scroll', updateScrollState);

        }
      }
    }

  })();

  /*
    $('.rotate').each(function (i) {
      //stringRandom.init('.rotate-' + i);
    }); */

  stringRandom.init('.el-st');

</script>-->

<!--
<script src="https://code.jquery.com/jquery-3.4.1.min.js"
  integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>
<script>
  (function ($) {

    $.fn.shuffleLetters = function (prop) {

      // Handling default arguments
      var options = $.extend({
        // Default arguments
      }, prop)

      return this.each(function () {
        // The main plugin code goes here
      });
    };

    // A helper function

    function randomChar(type) {
      // Generate and return a random character
    }

  })(jQuery);


  function randomChar(type) {
    pool = ",.?/\\(^)![]{}*&^%$#'\"";
    /*
        if (type == "lowerLetter") {
          pool = "abcdefghijklmnopqrstuvwxyz0123456789";
        }
        else if (type == "upperLetter") {
          pool = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
        }
        else if (type == "symbol") {
          pool = ",.?/\\(^)![]{}*&^%$#'\"";
        }*/

    var arr = pool.split('');
    return arr[Math.floor(Math.random() * arr.length)];
  }

  $.fn.shuffleLetters = function (prop) {

    var options = $.extend({
      "step": 3,    // How many times should the letters be changed
      "fps": 20,   // Frames Per Second
      "text": ""    // Use this text instead of the contents
    }, prop)

    return this.each(function () {

      var el = $(this),
        str = "";

      if (options.text) {
        str = options.text.split('');
      }
      else {
        str = el.text().split('');
      }

      // The types array holds the type for each character;
      // Letters holds the positions of non-space characters;

      var types = [],
        letters = [];

      // Looping through all the chars of the string

      for (var i = 0; i < str.length; i++) {

        var ch = str[i];

        if (ch == " ") {
          types[i] = "space";
          continue;
        }
        else if (/[a-z]/.test(ch)) {
          types[i] = "lowerLetter";
        }
        else if (/[A-Z]/.test(ch)) {
          types[i] = "upperLetter";
        }
        else {
          types[i] = "symbol";
        }

        letters.push(i);
      }

      el.html("");

      // Self executing named function expression:

      (function shuffle(start) {

        // This code is run options.fps times per second
        // and updates the contents of the page element

        var i,
          len = letters.length,
          strCopy = str.slice(0); // Fresh copy of the string

        if (start > len) {
          return;
        }

        // All the work gets done here
        for (i = Math.max(start, 0); i < len; i++) {

          // The start argument and options.step limit
          // the characters we will be working on at once

          if (i < start + options.step) {
            // Generate a random character at this position
            strCopy[letters[i]] = randomChar(types[letters[i]]);

          }
          else {
            strCopy[letters[i]] = "";
          }
        }

        el.text(strCopy.join(""));

        setTimeout(function () {

          shuffle(start + 1);

        }, 1000 / options.fps);

      })(-options.step);

    });
  };

  /*
    $('#contact a').mouseover(function () {
      $(this).shuffleLetters({
        "text": "hello"
      });
    }); */


  $(window).scroll(function () {
    console.log("scroll");
    $('.rotate').shuffleLetters({
      "text": "emilymylinh@gmail.com"
    });
  });


</script>-->